generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int    @id @default(autoincrement())
  name           String
  email          String @unique
  hashedPassword String
  role           Role   @default(MEMBER)

  clients Client[]
  tasks   Task[]
  notes   Note[]
  deals   Deal[]
}

model Task {
  id       Int        @id @default(autoincrement())
  title    String
  due_Date DateTime   @default(now())
  status   TaskStatus @default(TODO)

  userId Int
  user   User @relation(fields: [userId], references: [id])
}

model Client {
  id         Int          @id @default(autoincrement())
  name       String
  phone      String
  email      String
  company    String? 
  status     ClientStatus
  created_At DateTime     @default(now())

  userId Int
  user   User   @relation(fields: [userId], references: [id])
  notes  Note[]
  deals  Deal[]

  @@unique([name, userId])
}

model Note {
  id      Int      @id @default(autoincrement())
  type    NoteType
  content String?
  date    DateTime @default(now())

  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  client   Client @relation(fields: [clientId], references: [id])
  clientId Int
}

model Deal {
  id     Int        @id @default(autoincrement())
  title  String
  value  Float?
  status DealStatus @default(OPEN)
  stage  DealStage  @default(LEAD)

  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  client   Client @relation(fields: [clientId], references: [id])
  clientId Int
}

enum NoteType {
  MEETING
  EMAIL
  CALL
}

enum DealStage {
  LEAD
  CONTACT
  NEGOTIATION
  CLOSED
}

enum DealStatus {
  OPEN
  WON
  LOST
}

enum TaskStatus {
  TODO
  DONE
  OVERDUE
}

enum ClientStatus {
  LEAD
  ACTIVE
  CLOSED
}

enum Role {
  ADMIN
  MEMBER
}
